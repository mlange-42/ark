{{- define "template" -}}
//go:build !debug

package ecs

// Code generated by go generate; DO NOT EDIT.

{{range makeRange 0 8}}
{{- $n := . -}}
{{- $upper := upperLetters . -}}
{{- $genericsShort := "" -}}
{{- $return := "" -}}
{{- if .}}
{{- $genericsShort = join "[" ", " "]" $upper -}}
{{- $return = join "(*" ", *" ")" $upper -}}
{{- end}}

// Next advances the query's cursor to the next entity.
func (q *Query{{.}}{{$genericsShort}}) Next() bool {
	if int64(q.cursor.index) < q.cursor.maxIndex {
		q.cursor.index++
		return true
	}
	return q.nextTableOrArchetype()
}

// Entity returns the current entity.
func (q *Query{{.}}{{$genericsShort}}) Entity() Entity {
	return q.table.GetEntity(q.cursor.index)
}

{{if . -}}
// Get returns the queried components of the current entity.
//
// ⚠️ Do not store the obtained pointers outside of the current context (i.e. the query loop)!
func (q *Query{{.}}{{$genericsShort}}) Get() {{$return}} {
	return {{range $i, $v := $upper}}{{if $i}},
		{{end}}(*{{$v}})(q.column{{$v}}.Get(q.cursor.index)){{end}}
}
{{- end}}

{{end -}}
{{end -}}
